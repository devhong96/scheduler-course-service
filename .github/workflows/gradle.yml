# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'corretto'

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

    - name: Start Redis
      uses: supercharge/redis-github-action@1.1.0
      with:
        redis-version: 7

    - name: Build with Gradle Wrapper
      run: ./gradlew build -x test
      
    - name: Build docker image
      run: docker build -t devhong96/scheduler-course-service .

    - name: Login docker hub
      uses: docker/login-action@v2
      with:
       username: ${{ secrets.DOCKERHUB_USERNAME }}
       password: ${{ secrets.DOCKERHUB_TOKEN }}
       
    - name: Publish to docker hub
      run: docker push devhong96/scheduler-course-service:latest

#  deploy:
#
#    runs-on: ubuntu-latest
#    needs: build
#    steps:
#      - name: Set up SSH connection to synology
#        uses: webfactory/ssh-agent@v0.9.0
#        with:
#          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
#
#      - name: deploy
#        run: |
#          ssh -p ${{ secrets.NAS_PORT }} -o StrictHostKeyChecking=no ${{ secrets.NAS_USERNAME }}@${{ secrets.NAS_HOST }}  << EOF
#          cd /volume1/docker/scheduler/application
#
#          compose stop course-service
#          compose rm -f course-service
#          docker rmi -f course-service
#
#          compose pull course-service
#          compose up -d --no-deps course-service
#          EOF

  dependency-submission:

    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'corretto'

    - name: Generate and submit dependency graph
      uses: gradle/actions/dependency-submission@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0
